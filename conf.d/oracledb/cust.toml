[[queries]]
mesurement = "big_queries"
# p95_rows= "Gauge metric with percentile 95 of returned rows.", p99_rows= "Gauge metric with percentile 99 of returned rows."
value_fields = [ "p95_rows", "p99_rows" ]
request = '''
select  percentile_disc(0.95)  within group (order by rownum) as p95_rows, percentile_disc(0.99)  within group (order by rownum) as p99_rows from v$sql where last_active_time >= sysdate - 5/(24*60)
'''

[[queries]]
mesurement = "size_user_segments_top100"
# table_bytes="Gauge metric with the size of the tables in user segments."
value_fields = [ "table_bytes" ]
label_fields = ["segment_name"]
request = '''
select * from (select segment_name,sum(bytes) as table_bytes from user_segments where segment_type='TABLE' group by segment_name) order by table_bytes DESC FETCH NEXT 100 ROWS ONLY
'''

[[queries]]
mesurement = "size_user_segments_top100"
# table_partition_bytes="Gauge metric with the size of the table partition in user segments."
value_fields = [ "table_partition_bytes" ]
label_fields = ["segment_name"]
request = '''
select * from (select segment_name,sum(bytes) as table_partition_bytes from user_segments where segment_type='TABLE PARTITION' group by segment_name) order by table_partition_bytes DESC FETCH NEXT 100 ROWS ONLY
'''

[[queries]]
mesurement = "size_user_segments_top100"
# cluster_bytes="Gauge metric with the size of the cluster in user segments."
value_fields = [ "cluster_bytes" ]
label_fields = ["segment_name"]
request = '''
select * from (select segment_name,sum(bytes) as cluster_bytes from user_segments where segment_type='CLUSTER' group by segment_name) order by cluster_bytes DESC FETCH NEXT 100 ROWS ONLY
'''

[[queries]]
mesurement = "size_dba_segments_top100"
# table_bytes="Gauge metric with the size of the tables in user segments."
value_fields = [ "table_bytes" ]
label_fields = ["segment_name"]
request = '''
select * from (select segment_name,sum(bytes) as table_bytes from dba_segments where segment_type='TABLE' group by segment_name) order by table_bytes DESC FETCH NEXT 100 ROWS ONLY
'''

[[queries]]
mesurement = "size_dba_segments_top100"
# table_partition_bytes="Gauge metric with the size of the table partition in user segments."
value_fields = [ "table_partition_bytes" ]
label_fields = ["segment_name"]
request = '''
select * from (select segment_name,sum(bytes) as table_partition_bytes from dba_segments where segment_type='TABLE PARTITION' group by segment_name) order by table_partition_bytes DESC FETCH NEXT 100 ROWS ONLY
'''

[[queries]]
mesurement = "size_dba_segments_top100"
# cluster_bytes="Gauge metric with the size of the cluster in user segments."
value_fields = [ "cluster_bytes" ]
label_fields = ["segment_name"]
request = '''
select * from (select segment_name,sum(bytes) as cluster_bytes from dba_segments where segment_type='CLUSTER' group by segment_name) order by cluster_bytes DESC FETCH NEXT 100 ROWS ONLY
'''

[[queries]]
mesurement = "cache_hit_ratio"
# percentage="Gauge metric with the cache hit ratio."
value_fields = [ "percentage" ]
request = '''
select Round(((Sum(Decode(a.name, 'consistent gets', a.value, 0)) + Sum(Decode(a.name, 'db block gets', a.value, 0)) - Sum(Decode(a.name, 'physical reads', a.value, 0))  )/ (Sum(Decode(a.name, 'consistent gets', a.value, 0)) + Sum(Decode(a.name, 'db block gets', a.value, 0)))) *100,2) as percentage FROM v$sysstat a
'''

[[queries]]
mesurement = "startup"
# time_seconds="Database startup time in seconds."
value_fields = [ "time_seconds" ]
request = '''
SELECT (SYSDATE - STARTUP_TIME) * 24 * 60 * 60 AS time_seconds FROM V$INSTANCE
'''
